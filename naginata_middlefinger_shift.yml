title: 薙刀式 v12（中指シフト）

# ===== Aliases =====

aliases:

# ----- Modifier Keys -----

- from/modifiers: &opt_shift_key
    optional:
    - shift

- to/modifiers: &shift_key
  - shift

# ----- Kana Shift Keys -----

- from/key_code: &dakuon_right j
- from/key_code: &dakuon_left f
- from/key_code: &handakuon_right m
- from/key_code: &handakuon_left v
- from/key_code: &kogaki q

# ----- Variables -----

- to: &turn_on_left_shift
  - set_variable:
      name: left_shifted
      value: 1

- to: &turn_on_right_shift
  - set_variable:
      name: right_shifted
      value: 1

- to_after_key_up: &turn_off_left_shift
  - set_variable:
      name: left_shifted
      value: 0

- to_after_key_up: &turn_off_right_shift
  - set_variable:
      name: right_shifted
      value: 0

# ----- Conditions -----

- conditions: &ja_input
  - type: input_source_if
    input_sources:
    - language: ja

- conditions: &system_mode
  - type: variable_if
    name: system_mode
    value: 1

- conditions: &base_state
  - type: input_source_if
    input_sources:
    - language: ja
  - type: variable_unless
    name: kana_layout_invalid
    value: 1
  - type: variable_unless
    name: system_mode
    value: 1

- conditions: &left_shifted
  - type: input_source_if
    input_sources:
    - language: ja
  - type: variable_unless
    name: kana_layout_invalid
    value: 1
  - type: variable_unless
    name: system_mode
    value: 1
  - type: variable_if
    name: left_shifted
    value: 1

- conditions: &right_shifted
  - type: input_source_if
    input_sources:
    - language: ja
  - type: variable_unless
    name: kana_layout_invalid
    value: 1
  - type: variable_unless
    name: system_mode
    value: 1
  - type: variable_if
    name: right_shifted
    value: 1

# ===== Rules =====

rules:
- description: 薙刀式 v12（中指シフト）
  manipulators:

# ===== Functions =====
# 単打より先に記述する

  # Return
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: m
    to:
    - key_code: return_or_enter
      repeat: false

# ===== 外来音（濁音） =====

  # でぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: e
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: h
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # でゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: e
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: h
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # どぅ（左シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: d
      - key_code: l
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: w
      repeat: false
    - key_code: u
      repeat: false
    - set_variable:
        name: left_shifted
        value: 1
    to_after_key_up: *turn_off_left_shift
    conditions: *base_state

  # じぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: r
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: z
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ぢぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: g
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ヴぁ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: l
      - key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: v
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ヴぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: l
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: v
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # ヴぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: l
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: v
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ヴぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: l
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: v
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ヴゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: l
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: v
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぐぁ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: h
      - key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: w
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぐぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: h
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: w
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # ぐぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: h
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: w
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ぐぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: h
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: w
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ぐゎ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: h
      - key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: u
      repeat: false
    - key_code: l
      repeat: false
    - key_code: w
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

# ===== 外来音（清音） =====

  # てぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: e
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: h
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # てゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: e
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: h
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # とぅ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: d
      - key_code: l
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: w
      repeat: false
    - key_code: u
      repeat: false
    - set_variable:
        name: left_shifted
        value: 1
    to_after_key_up: *turn_off_left_shift
    conditions: *base_state

  # しぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: r
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ちぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: g
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # うぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: l
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: w
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # うぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: l
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: w
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # うぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: l
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: w
      repeat: false
    - key_code: h
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ふぁ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: period
      - key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: f
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ふぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: period
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: f
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # ふぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: period
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: f
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ふぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: period
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: f
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ふゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: period
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: f
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # つぁ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: semicolon
      - key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: s
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # つぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: semicolon
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: s
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # つぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: semicolon
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: s
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # つぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: semicolon
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: s
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # くぁ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: h
      - key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: w
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # くぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: h
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: w
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # くぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: h
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: w
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # くぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: h
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: w
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # くゎ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: h
      - key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: u
      repeat: false
    - key_code: l
      repeat: false
    - key_code: w
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

# ===== 拗音（半濁音） =====

  # ぴゃ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: s
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぴゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: s
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぴょ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: s
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

# ===== 拗音（濁音） =====

  # じゃ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: r
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: j
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # じゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: r
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: j
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # じょ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: r
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: j
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ぎゃ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: w
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぎゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: w
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぎょ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: w
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ぢゃ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: g
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぢゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: g
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぢょ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: g
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # びゃ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: s
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # びゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: s
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # びょ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: s
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

# ===== 拗音（清音） =====

  # しゃ
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # しゅ
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # しょ
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # きゃ
  - type: basic
    from:
      simultaneous:
      - key_code: w
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # きゅ
  - type: basic
    from:
      simultaneous:
      - key_code: w
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # きょ
  - type: basic
    from:
      simultaneous:
      - key_code: w
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ちゃ
  - type: basic
    from:
      simultaneous:
      - key_code: g
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ちゅ
  - type: basic
    from:
      simultaneous:
      - key_code: g
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ちょ
  - type: basic
    from:
      simultaneous:
      - key_code: g
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # にゃ
  - type: basic
    from:
      simultaneous:
      - key_code: d
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # にゅ
  - type: basic
    from:
      simultaneous:
      - key_code: d
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # にょ
  - type: basic
    from:
      simultaneous:
      - key_code: d
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ひゃ
  - type: basic
    from:
      simultaneous:
      - key_code: s
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ひゅ
  - type: basic
    from:
      simultaneous:
      - key_code: s
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ひょ
  - type: basic
    from:
      simultaneous:
      - key_code: s
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # みゃ
  - type: basic
    from:
      simultaneous:
      - key_code: b
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # みゅ
  - type: basic
    from:
      simultaneous:
      - key_code: b
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # みょ
  - type: basic
    from:
      simultaneous:
      - key_code: b
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # りゃ
  - type: basic
    from:
      simultaneous:
      - key_code: e
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # りゅ
  - type: basic
    from:
      simultaneous:
      - key_code: e
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # りょ
  - type: basic
    from:
      simultaneous:
      - key_code: e
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

# ===== 小書き =====

  # ゎ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: w
      repeat: false
    - key_code: a
      repeat: false
    conditions: *left_shifted

  # ぁ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぃ（右シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: k
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

  # ぅ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぇ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ぉ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ゃ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ゅ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ょ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ヵ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: f
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: k
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ヶ
  - type: basic
    from:
      simultaneous:
      - key_code: *kogaki
      - key_code: x
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: k
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

# ===== 半濁音 =====

  # ぱ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: c
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぴ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: s
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # ぷ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: period
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぺ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_left
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ぽ
  - type: basic
    from:
      simultaneous:
      - key_code: *handakuon_right
      - key_code: z
      modifiers: *opt_shift_key
    to:
    - key_code: p
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

# ===== 濁音 =====

  # が
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: f
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぎ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: w
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # ぐ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # げ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: x
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ご
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: v
      modifiers: *opt_shift_key
    to:
    - key_code: g
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ざ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: u
      modifiers: *opt_shift_key
    to:
    - key_code: z
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # じ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: r
      modifiers: *opt_shift_key
    to:
    - key_code: z
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # ず
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: z
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # ぜ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: a
      modifiers: *opt_shift_key
    to:
    - key_code: z
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ぞ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: b
      modifiers: *opt_shift_key
    to:
    - key_code: z
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # だ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ぢ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: g
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # づ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: semicolon
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # で
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: e
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ど（左シフト）
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: d
      simultaneous_options:
        key_up_when: all
      modifiers: *opt_shift_key
    to:
    - key_code: d
      repeat: false
    - key_code: o
      repeat: false
    - set_variable:
        name: left_shifted
        value: 1
    to_after_key_up: *turn_off_left_shift
    conditions: *base_state

  # ば
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: c
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # び
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: s
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # ぶ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: period
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # べ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ぼ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_right
      - key_code: z
      modifiers: *opt_shift_key
    to:
    - key_code: b
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ヴ
  - type: basic
    from:
      simultaneous:
      - key_code: *dakuon_left
      - key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: v
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

# ===== 中指シフトキー =====
# 同時押しより後に記述する

# ----- シフト時 -----

  # に（左シフト）
  - type: basic
    from:
      key_code: d
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: i
      repeat: false
    - set_variable:
        name: left_shifted
        value: 1
    to_after_key_up: *turn_off_left_shift
    conditions: *right_shifted

  # も（右シフト）
  - type: basic
    from:
      key_code: k
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: o
      repeat: false
    - set_variable:
        name: right_shifted
        value: 1
    to_after_key_up: *turn_off_right_shift
    conditions: *left_shifted

# ----- ベース面 -----

  # と（左シフト）
  - type: basic
    from:
      key_code: d
      modifiers: *opt_shift_key
    to_if_alone:
    - key_code: t
      repeat: false
    - key_code: o
      repeat: false
    to: *turn_on_left_shift
    to_after_key_up: *turn_off_left_shift
    conditions: *base_state

  # い（右シフト）
  - type: basic
    from:
      key_code: k
      modifiers: *opt_shift_key
    to_if_alone:
    - key_code: i
      repeat: false
    to: *turn_on_right_shift
    to_after_key_up: *turn_off_right_shift
    conditions: *base_state

# ===== 清音（シフト） =====

  # え
  - type: basic
    from:
      key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: e
      repeat: false
    conditions: *left_shifted

  # お
  - type: basic
    from:
      key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: o
      repeat: false
    conditions: *left_shifted

  # さ
  - type: basic
    from:
      key_code: u
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: a
      repeat: false
    conditions: *left_shifted

  # せ
  - type: basic
    from:
      key_code: a
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: e
      repeat: false
    conditions: *right_shifted

  # ち
  - type: basic
    from:
      key_code: g
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: i
      repeat: false
    conditions: *right_shifted

  # つ
  - type: basic
    from:
      key_code: semicolon
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: u
      repeat: false
    conditions: *left_shifted

  # に
  - type: basic
    from:
      key_code: d
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: i
      repeat: false
    conditions: *right_shifted

  # ぬ
  - type: basic
    from:
      key_code: s
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *right_shifted

  # ね
  - type: basic
    from:
      key_code: w
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: e
      repeat: false
    conditions: *right_shifted

  # の
  - type: basic
    from:
      key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *left_shifted

  # ふ
  - type: basic
    from:
      key_code: period
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: u
      repeat: false
    conditions: *left_shifted

  # ま
  - type: basic
    from:
      key_code: f
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: a
      repeat: false
    conditions: *right_shifted

  # み
  - type: basic
    from:
      key_code: b
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: i
      repeat: false
    conditions: *right_shifted

  # む
  - type: basic
    from:
      key_code: comma
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: u
      repeat: false
    conditions: *left_shifted

  # め
  - type: basic
    from:
      key_code: r
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: e
      repeat: false
    conditions: *right_shifted

  # も
  - type: basic
    from:
      key_code: k
      modifiers: *opt_shift_key
    to:
    - key_code: m
      repeat: false
    - key_code: o
      repeat: false
    conditions: *left_shifted

  # や
  - type: basic
    from:
      key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: "y"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *left_shifted

  # ゆ
  - type: basic
    from:
      key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: "y"
      repeat: false
    - key_code: u
      repeat: false
    conditions: *left_shifted

  # よ
  - type: basic
    from:
      key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: "y"
      repeat: false
    - key_code: o
      repeat: false
    conditions: *left_shifted

  # り
  - type: basic
    from:
      key_code: e
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: i
      repeat: false
    conditions: *right_shifted

  # わ
  - type: basic
    from:
      key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: w
      repeat: false
    - key_code: a
      repeat: false
    conditions: *left_shifted

  # を
  - type: basic
    from:
      key_code: c
      modifiers: *opt_shift_key
    to:
    - key_code: w
      repeat: false
    - key_code: o
      repeat: false
    conditions: *right_shifted

  # 読点
  - type: basic
    from:
      key_code: v
      modifiers: *opt_shift_key
    to:
    - key_code: comma
      repeat: false
    conditions: *right_shifted

  # 句点
  - type: basic
    from:
      key_code: m
      modifiers: *opt_shift_key
    to:
    - key_code: period
      repeat: false
    conditions: *left_shifted

  # Shift + Left Arrow (right shifted)
  - type: basic
    from:
      key_code: t
      modifiers: *opt_shift_key
    to:
    - key_code: left_arrow
      modifiers: *shift_key
      repeat: false
    conditions: *right_shifted

  # Shift + Left Arrow (left shifted)
  - type: basic
    from:
      key_code: t
      modifiers: *opt_shift_key
    to:
    - key_code: left_arrow
      modifiers: *shift_key
      repeat: false
    conditions: *left_shifted

  # Shift + Right Arrow (left shifted)
  - type: basic
    from:
      key_code: "y"
      modifiers: *opt_shift_key
    to:
    - key_code: right_arrow
      modifiers: *shift_key
      repeat: false
    conditions: *left_shifted

  # Shift + Right Arrow (right shifted)
  - type: basic
    from:
      key_code: "y"
      modifiers: *opt_shift_key
    to:
    - key_code: right_arrow
      modifiers: *shift_key
      repeat: false
    conditions: *right_shifted

# ===== 清音（ベース） =====

  # あ
  - type: basic
    from:
      key_code: j
      modifiers: *opt_shift_key
    to:
    - key_code: a
      repeat: false
    conditions: *base_state

  # い
  - type: basic
    from:
      key_code: k
      modifiers: *opt_shift_key
    to:
    - key_code: i
      repeat: false
    conditions: *base_state

  # う
  - type: basic
    from:
      key_code: l
      modifiers: *opt_shift_key
    to:
    - key_code: u
      repeat: false
    conditions: *base_state

  # か
  - type: basic
    from:
      key_code: f
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # き
  - type: basic
    from:
      key_code: w
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # く
  - type: basic
    from:
      key_code: h
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # け
  - type: basic
    from:
      key_code: x
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # こ
  - type: basic
    from:
      key_code: v
      modifiers: *opt_shift_key
    to:
    - key_code: k
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # し
  - type: basic
    from:
      key_code: r
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # す
  - type: basic
    from:
      key_code: o
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # そ
  - type: basic
    from:
      key_code: b
      modifiers: *opt_shift_key
    to:
    - key_code: s
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # た
  - type: basic
    from:
      key_code: "n"
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # っ
  - type: basic
    from:
      key_code: g
      modifiers: *opt_shift_key
    to:
    - key_code: l
      repeat: false
    - key_code: t
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # て
  - type: basic
    from:
      key_code: e
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # と
  - type: basic
    from:
      key_code: d
      modifiers: *opt_shift_key
    to:
    - key_code: t
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # な
  - type: basic
    from:
      key_code: m
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # は
  - type: basic
    from:
      key_code: c
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # ひ
  - type: basic
    from:
      key_code: s
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: i
      repeat: false
    conditions: *base_state

  # へ
  - type: basic
    from:
      key_code: p
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ほ
  - type: basic
    from:
      key_code: z
      modifiers: *opt_shift_key
    to:
    - key_code: h
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ら
  - type: basic
    from:
      key_code: period
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: a
      repeat: false
    conditions: *base_state

  # る
  - type: basic
    from:
      key_code: i
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: u
      repeat: false
    conditions: *base_state

  # れ
  - type: basic
    from:
      key_code: slash
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: e
      repeat: false
    conditions: *base_state

  # ろ
  - type: basic
    from:
      key_code: a
      modifiers: *opt_shift_key
    to:
    - key_code: r
      repeat: false
    - key_code: o
      repeat: false
    conditions: *base_state

  # ん
  - type: basic
    from:
      key_code: comma
      modifiers: *opt_shift_key
    to:
    - key_code: "n"
      repeat: false
    - key_code: "n"
      repeat: false
    conditions: *base_state

  # 長音符
  - type: basic
    from:
      key_code: semicolon
      modifiers: *opt_shift_key
    to:
    - key_code: hyphen
      repeat: false
    conditions: *base_state

  # Delete
  - type: basic
    from:
      key_code: u
      modifiers: *opt_shift_key
    to:
    - key_code: delete_or_backspace
    conditions: *base_state

  # Left Arrow
  - type: basic
    from:
      key_code: t
      modifiers: *opt_shift_key
    to:
    - key_code: left_arrow
      repeat: false
    conditions: *base_state

  # Right Arrow
  - type: basic
    from:
      key_code: "y"
      modifiers: *opt_shift_key
    to:
    - key_code: right_arrow
      repeat: false
    conditions: *base_state

# ===== System Mode =====
# 小書きより後に記述する

  # System Mode Key
  - type: basic
    from:
      key_code: q
    to_if_alone:
    - key_code: q
      repeat: false
    to:
    - set_variable:
        name: system_mode
        value: 1
    to_after_key_up:
    - set_variable:
        name: system_mode
        value: 0

  # 薙刀式を中断
  - type: basic
    from:
      key_code: o
    to:
    - set_variable: &turn_off_kana_layout
        name: kana_layout_invalid
        value: 1
    conditions: *system_mode

  # 薙刀式を再開（日本語入力オン）
  - type: basic
    from:
      key_code: i
    to:
    - set_variable: &turn_on_kana_layout
        name: kana_layout_invalid
        value: 0
    - key_code: japanese_kana
      repeat: false
    conditions: *system_mode
