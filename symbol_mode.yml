title: "11. Symbol Mode"
# R を同時打鍵する配列ではその配列ファイル内で設定する

# ===== Aliases =====

aliases:

# ----- Modifier Keys -----

- from/modifiers: &opt_shift_key
    optional:
    - shift

- from/modifiers: &mand_shift_key
    mandatory:
    - shift

- to/modifiers: &to_shift_key
  - shift

# ----- Conditions -----

- conditions: &symbol_mode
  - type: variable_if
    name: symbol_mode
    value: 1
  - type: frontmost_application_unless
    bundle_identifiers:
    - "^com\\.apple\\.loginwindow$"

- conditions: &base_state
  - type: input_source_if
    input_sources:
    - language: ja
  - type: variable_unless
    name: symbol_mode
    value: 1
  - type: frontmost_application_unless
    bundle_identifiers:
    - "^com\\.apple\\.loginwindow$"

# ===== Rules =====

rules:
- description: "[Kana Input] Symbol Mode"
  manipulators:

  # Symbol Mode Key
  - type: basic
    from:
      key_code: r
    to:
    - set_variable:
        name: symbol_mode
        value: 1
    to_after_key_up:
    - set_variable:
        name: symbol_mode
        value: 0
    conditions: *base_state

  # Y → 中黒
  - type: basic
    from:
      key_code: "y"
    to:
    - key_code: backslash
      repeat: false
    - key_code: "y"
      repeat: false
    conditions: *symbol_mode

  # U → Em ダッシュ
  - type: basic
    from:
      key_code: u
    to:
    - key_code: backslash
      repeat: false
    - key_code: u
      repeat: false
    conditions: *symbol_mode

  # I → 三点リーダ
  - type: basic
    from:
      key_code: i
    to:
    - key_code: backslash
      repeat: false
    - key_code: i
      repeat: false
    conditions: *symbol_mode

  # O → コロン
  - type: basic
    from:
      key_code: o
    to:
    - key_code: backslash
      repeat: false
    - key_code: o
      repeat: false
    conditions: *symbol_mode

  # P → 波ダッシュ
  - type: basic
    from:
      key_code: p
    to:
    - key_code: backslash
      repeat: false
    - key_code: p
      repeat: false
    conditions: *symbol_mode

  # H → Left Arrow
  - type: basic
    from:
      key_code: h
    to:
    - key_code: backslash
      repeat: false
    - key_code: h
      repeat: false
    conditions: *symbol_mode

  # J → Down Arrow
  - type: basic
    from:
      key_code: j
    to:
    - key_code: backslash
      repeat: false
    - key_code: j
      repeat: false
    conditions: *symbol_mode

  # K → Up Arrow
  - type: basic
    from:
      key_code: k
    to:
    - key_code: backslash
      repeat: false
    - key_code: k
      repeat: false
    conditions: *symbol_mode

  # L → Right Arrow
  - type: basic
    from:
      key_code: l
    to:
    - key_code: backslash
      repeat: false
    - key_code: l
      repeat: false
    conditions: *symbol_mode

  # Semicolon → セミコロン
  - type: basic
    from:
      key_code: semicolon
    to:
    - key_code: backslash
      repeat: false
    - key_code: semicolon
      repeat: false
    conditions: *symbol_mode

  # Colon → コロン
  - type: basic
    from:
      key_code: semicolon
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: semicolon
      modifiers: *to_shift_key
      repeat: false
    conditions: *symbol_mode

  # Single Quote → シングルクォート
  - type: basic
    from:
      key_code: quote
    to:
    - key_code: backslash
      repeat: false
    - key_code: quote
      repeat: false
    conditions: *symbol_mode

  # Double Quote → ダブルクォート
  - type: basic
    from:
      key_code: quote
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: quote
      modifiers: *to_shift_key
      repeat: false
    conditions: *symbol_mode

  # N → 乗算記号
  - type: basic
    from:
      key_code: "n"
    to:
    - key_code: backslash
      repeat: false
    - key_code: "n"
      repeat: false
    conditions: *symbol_mode

  # M → 全角スペース
  - type: basic
    from:
      key_code: m
    to:
    - key_code: backslash
      repeat: false
    - key_code: m
      repeat: false
    conditions: *symbol_mode

  # Comma → コンマ
  - type: basic
    from:
      key_code: comma
    to:
    - key_code: backslash
      repeat: false
    - key_code: comma
      repeat: false
    conditions: *symbol_mode

  # Period → ピリオド
  - type: basic
    from:
      key_code: period
    to:
    - key_code: backslash
      repeat: false
    - key_code: period
      repeat: false
    conditions: *symbol_mode

  # Less Than → 感嘆符
  - type: basic
    from:
      key_code: comma
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: comma
      modifiers: *to_shift_key
      repeat: false
    conditions: *symbol_mode

  # Greater Than → 疑問符
  - type: basic
    from:
      key_code: period
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: period
      modifiers: *to_shift_key
      repeat: false
    conditions: *symbol_mode

  # Slash → スラッシュ
  - type: basic
    from:
      key_code: slash
    to:
    - key_code: backslash
      repeat: false
    - key_code: slash
      repeat: false
    conditions: *symbol_mode

  # Question Mark → 疑問符
  - type: basic
    from:
      key_code: slash
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: slash
      modifiers: *to_shift_key
      repeat: false
    conditions: *symbol_mode

  # Bracket → 山括弧／隅付き括弧
  - type: basic
    from:
      key_code: open_bracket
      modifiers: *opt_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: open_bracket
      repeat: false
    conditions: *symbol_mode

  - type: basic
    from:
      key_code: close_bracket
      modifiers: *opt_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: close_bracket
      repeat: false
    conditions: *symbol_mode

  # Paren → 一重引用符／二重引用符
  - type: basic
    from:
      key_code: "9"
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: "9"
      modifiers: *to_shift_key
      repeat: false
    conditions: *symbol_mode

  - type: basic
    from:
      key_code: "0"
      modifiers: *mand_shift_key
    to:
    - key_code: backslash
      repeat: false
    - key_code: "0"
      repeat: false
      modifiers: *to_shift_key
    conditions: *symbol_mode
